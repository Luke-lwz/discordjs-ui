"use strict";var uuid=require("uuid"),nodeLocalstorage=require("node-localstorage"),discordjs=require("discord.js"),async_hooks=require("async_hooks");function _interopNamespaceDefault(r){var o=Object.create(null);return r&&Object.keys(r).forEach(function(e){var t;"default"!==e&&(t=Object.getOwnPropertyDescriptor(r,e),Object.defineProperty(o,e,t.get?t:{enumerable:!0,get:function(){return r[e]}}))}),o.default=r,Object.freeze(o)}var discordjs__namespace=_interopNamespaceDefault(discordjs);function createButtonCache(o){const n=new Map;return setInterval(()=>{var e,t,r=Date.now();for([e,t]of n)t.ttl<r&&n.delete(e)},1e3),{set:function(e,t,r){t={fn:t,ttl:Date.now()+1e3*o,currentPathname:r},n.set(e,t)},get:function(e){return n.get(e)}}}const ARGS_DIVIDER=">",PREFIX_LENGTH=12,fs=require("fs"),path=require("path");function getRoutesFromCustomRoutes(e=[]){return e.forEach(e=>{removeFirstLastSlash(e.route).split("/")}),[]}function removeFirstLastSlash(e){return e.replace(/^\/|\/$/g,"")}function getRoutesFromDirectory(e){var t=path.dirname(require.main.filename),t=path.join(t,(e||"/ui").replace("/",""));if(!fs.existsSync(t))throw new Error("UI directory not found at "+t);if(fs.readdirSync(t).length)return getFileTree(t);throw new Error("No files found in UI directory at "+t)}const ALLOWED_FILE_EXTENSIONS=[".js",".ts"],ALLOWED_FILE_NAMES=["ui","error","notFound","gate"],EXCLUEDED_DIRECTORIES_REGEX=[/^_.*$/,/^\(.*$/],getFileTree=(i,e=0)=>{const c=[];return fs.readdirSync(i).forEach(t=>{var r=path.join(i,t),e=path.join("",t),o=fs.statSync(r),n={path:r,route:e,isDirectory:o.isDirectory(),children:[],component:void 0};if(o.isDirectory())EXCLUEDED_DIRECTORIES_REGEX.some(e=>e.test(t))||(n.children=getFileTree(r,e),c.push(n));else{var o=path.extname(t),a=path.basename(t,o);if(ALLOWED_FILE_EXTENSIONS.includes(o)&&ALLOWED_FILE_NAMES.includes(a))try{var s=require(r);n.component=s?.default||s||void 0,n.route=e.replace(o,""),n.component&&"function"==typeof n.component&&c.push(n)}catch(e){throw new Error(`Error loading file ${r}: `+e.message)}}}),c},maxLength=100,uuidLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/uuid"),routeLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/route");function encodeRoute(e,t){let r=""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}r`+ARGS_DIVIDER+e;var o;return r.length>maxLength&&(o=routeLocalStorage.getItem(r),r=o?""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+o:(o=uuid.v4(),routeLocalStorage.setItem(r,o),uuidLocalStorage.setItem(o,e),""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+o)),r}function getRouteFromUUID(e){return uuidLocalStorage.getItem(e)}function gateErrorPage({interaction:e,ButtonBuilder:t,render:r,pathname:o}){e&&r&&t&&(e=(new t).setStyle(discordjs.ButtonStyle.Secondary).setLabel("🔄️").navigateTo(o),r({components:[(new discordjs.ActionRowBuilder).addComponents(e)],embeds:[(new discordjs.EmbedBuilder).setTitle("Disallowed").setDescription("You are not allowed to go here").setColor("#68398f")]}))}function errorPage({interaction:e,ButtonBuilder:t,render:r,pathname:o}){e&&r&&t&&(e=(new t).setStyle(discordjs.ButtonStyle.Secondary).setLabel("🔄️").navigateTo(o),r({components:[(new discordjs.ActionRowBuilder).addComponents(e)],embeds:[(new discordjs.EmbedBuilder).setTitle("Error").setDescription("An error occurred.").setColor("#880000")]}))}function notFoundPage({interaction:e,ButtonBuilder:t,render:r,pathname:o}){e&&r&&t&&(e=(new t).setStyle(discordjs.ButtonStyle.Secondary).setLabel("🔄️").navigateTo(o),r({components:[(new discordjs.ActionRowBuilder).addComponents(e)],embeds:[(new discordjs.EmbedBuilder).setTitle("Not Found").setDescription("**404** - Page not found").setColor("#63a8f7")]}))}function getUIFnAndRouteNameAndParams(e,t){const s={};let i="/";var r=new URL("https://lol.lol"+decodeURI(e));e=r.pathname;const o={};r.searchParams.forEach((e,t)=>{o[t]=e});var c=t;const u=e.split("/");""===u[0]&&u.shift();let l=!1,n=null,a={route:"error",component:errorPage,children:[],isDirectory:!1},d={route:"notFound",component:notFoundPage,children:[],isDirectory:!1},m=[],h={route:"gateError",component:gateErrorPage,children:[],isDirectory:!1};function f(e){e.forEach(e=>{e.isDirectory||("error"===e.route?a=e:"notFound"===e.route?d=e:"gateError"===e.route?h=e:"gate"===e.route?m.push(e):"ui"===e.route&&(n=e))})}return f(c),u.forEach((r,o)=>{if(!l){let t=!1;for(let e=0;e<c.length;e++){var n,a=c[e];if(a.isDirectory){if(a.route===r)return i+="/"+r,f(c=a.children),t=!0;if(/\[\.\.\..*\]/g.test(a.route)&&(n=a.route.replace("[","").replace(".","").replace(".","").replace(".","").replace("]",""),s[n]=u.slice(o).join("/"),i+="/:..."+n,f(a.children),e=c.length),/\[.*\]/g.test(a.route))return n=a.route.replace("[","").replace("]",""),s[n]=decodeURI(r),i+="/:"+r,f(c=a.children),t=!0}}t||(l=!0)}}),!l&&n||(console.log("Route not found ("+e+")"),l=!0),"function"!=typeof n?.component&&(console.error("Component is not a function ("+e+")"),l=!0),{uiRoute:n,errorRoute:a,notFoundRoute:d,gateRoutes:m,gateErrorRoute:h,routeName:i,params:s,searchParams:o,notFound:l,cleanPathname:decodeURI(e)}}function getNewPathNameWithSearchParams(e,t){var r;return t?((r=new URL("https://lol.lol"+decodeURI(e))).search=new URLSearchParams(t).toString(),r.pathname+r.search):e}function createRegisterSlashCommandsFunction(e){const{clientId:o,token:n,guildId:a}=e;return async e=>{var t=(new discordjs.REST).setToken(n);try{console.log("Started refreshing application (/) commands.");var r=e?.map(e=>e?.command?.toJSON())?.filter(e=>e)||[];await t.put(a?discordjs.Routes.applicationGuildCommands(o,a):discordjs.Routes.applicationCommands(o),{body:r}),console.log("Successfully reloaded application (/) commands.")}catch(e){console.error(e)}}}const contexts=new Map,asyncHook=async_hooks.createHook({init(e,t,r){contexts.has(r)&&contexts.set(e,contexts.get(r))},destroy(e){contexts.delete(e)}}),setContext=(asyncHook.enable(),e=>{contexts.set(async_hooks.executionAsyncId(),e)}),getContext=()=>{var e=contexts.get(async_hooks.executionAsyncId());if(e)return e;throw new Error("Cant use this function outside of a discordjs-ui route")},runWithContext=(e,t)=>new async_hooks.AsyncResource("RunWithContext").runInAsyncScope(async()=>{setContext(e),await t()});async function render(e,t={reply:!1}){var r=getContext()["interaction"],t=(t||{})["reply"];try{t?r?.replied?await r?.followUp?.(e):await r?.reply?.(e):r?.deffered||r?.replied?await r?.editReply?.(e):r?.message?await r?.update?.(e):await r?.reply?.(e)}catch(e){console.error(e)}}async function deferRender(){var e=getContext()["interaction"];try{e?.deffered||e?.replied||(e?.message?await e?.deferUpdate?.():await e?.deferReply?.())}catch(e){console.error(e)}}var __classPrivateFieldGet$1=function(e,t,r,o){if("a"===r&&!o)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e===t&&o:t.has(e))return"m"===r?o:"a"===r?o.call(e):o?o.value:t.get(e);throw new TypeError("Cannot read private member from an object whose class did not declare it")};class ButtonBuilder extends discordjs.ButtonBuilder{constructor(){super(),_ButtonBuilder_instances.add(this)}navigateTo(e,t){var r=getContext()["prefix"];return e=getNewPathNameWithSearchParams(e,t?.searchParams),__classPrivateFieldGet$1(this,_ButtonBuilder_instances,"m",_ButtonBuilder_setCustomId).call(this,encodeRoute(e,r)),this.setCustomId=null,this}onClick(e,t){var{prefix:r,buttonCache:o,currentPathname:n}=getContext();if(!t)throw new Error("onClick requires 'key' as second argument, for memory management purposes. Two functions with the same key replace each other in memory.");r=r.length+(ARGS_DIVIDER+"f"+ARGS_DIVIDER).length;if(100<r+t.length)throw new Error(`Key is too long (max: ${100-r}).`);return o.set(t,e,n),__classPrivateFieldGet$1(this,_ButtonBuilder_instances,"m",_ButtonBuilder_setCustomId).call(this,t),this.setCustomId=null,this}}async function navigate(g,p={}){const{routes:w,interaction:R,globalMetadata:I,prefix:e,buttonCache:t}=getContext();runWithContext({routes:w,interaction:R,globalMetadata:I,prefix:e,buttonCache:t,currentPathname:g},async()=>{if(!p.blank){var{uiRoute:t,errorRoute:r,gateRoutes:o,notFoundRoute:n,routeName:a,params:s,searchParams:i,cleanPathname:c,notFound:u}=getUIFnAndRouteNameAndParams(g=getNewPathNameWithSearchParams(g,p?.searchParams),w);let e=null;if(R?.fields?.fields){e={};for(const f of R.fields.fields.keys())e[f]=R.fields.fields.get(f)?.value||null}var l,d,m={interaction:R,pathname:c||null,route:a,params:s,searchParams:i,globalMetadata:I,modal:e};try{if(u)(l=await n?.component?.(m))&&render(l);else{for(let e=0;e<o.length;e++){var h=o[e];if(h.component)if(!await h.component(m))return}"ui"===t?.route&&(d=await t?.component?.(m))&&render(d)}}catch(e){console.log(e.message);c=await r?.component?.(m);c&&render(c)}}})}var _ModalBuilder_instances,_ModalBuilder_setCustomId,_ButtonBuilder_instances=new WeakSet,_ButtonBuilder_setCustomId=function(e){if(this.setCustomId)return this.setCustomId(e),this;throw new Error("Use only one of navigateTo or onClick methods.")},__classPrivateFieldGet=function(e,t,r,o){if("a"===r&&!o)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e===t&&o:t.has(e))return"m"===r?o:"a"===r?o.call(e):o?o.value:t.get(e);throw new TypeError("Cannot read private member from an object whose class did not declare it")};class ModalBuilder extends discordjs.ModalBuilder{constructor(){super(),_ModalBuilder_instances.add(this)}navigateTo(e,t){var r=getContext()["prefix"];return e=getNewPathNameWithSearchParams(e,t?.searchParams),__classPrivateFieldGet(this,_ModalBuilder_instances,"m",_ModalBuilder_setCustomId).call(this,encodeRoute(e,r)),this.setCustomId=null,this}onSubmit(e,t){var{prefix:r,buttonCache:o,currentPathname:n}=getContext();if(!t)throw new Error("onSubmit requires 'key' as second argument, for memory management purposes. Two functions with the same key replace each other in memory.");r=r.length+(ARGS_DIVIDER+"f"+ARGS_DIVIDER).length;if(100<r+t.length)throw new Error(`Key is too long (max: ${100-r}).`);return o.set(t,e,n),__classPrivateFieldGet(this,_ModalBuilder_instances,"m",_ModalBuilder_setCustomId).call(this,t),this.setCustomId=null,this}}async function reply(e){await render(e,{reply:!0})}function createUI(e){const{prefix:h="ui",routeDirectory:t="/ui",customRoutes:r=null,useFunctionalButtons:f=!1,functionalButtonTtl:o=1800,globalMetadata:g,slashCommands:p=[],slashCommandRegisterFunction:n=null}=e||{};if(0<p.length&&!n)throw new Error("slashCommandRegisterFunction is required when slashCommands are provided");if(h.length>PREFIX_LENGTH)throw new Error("Prefix length cannot be more than 12 characters");if(h.includes(ARGS_DIVIDER))throw new Error(`Prefix cannot contain '${ARGS_DIVIDER}' character`);n&&0<p?.length&&n(p);const w=r?getRoutesFromCustomRoutes(r):getRoutesFromDirectory(t),R=createButtonCache(o);async function I(e,t){runWithContext({routes:w,interaction:e,globalMetadata:g,prefix:h,buttonCache:R},async()=>{await navigate(t)})}return{openUI:I,onInteraction:function(m){runWithContext({routes:w,interaction:m,globalMetadata:g,prefix:h,buttonCache:R},async()=>{if(m?.isChatInputCommand()){const l=m["commandName"];var e=p.find(e=>e?.command?.name===l);e&&(e=(e||{})["navigateTo"],e)&&I(m,e)}else if(m?.isButton()||m?.isModalSubmit()){var{customId:e=""}=m||{};if(e?.startsWith(h+ARGS_DIVIDER)){var t,r,o,n,[e,a,...s]=e.split(ARGS_DIVIDER);if(e===h){let e=null;if(m?.fields?.fields){e={};for(const d of m.fields.fields.keys())e[d]=m.fields.fields.get(d)?.value||null}switch(a){case"n":var[i,c]=s;switch(i){case"c":var u=getRouteFromUUID(c);if(!u)return;navigate(u);break;case"r":navigate(c)}break;case"f":f&&([i]=s,{routeName:t,params:r,searchParams:o,cleanPathname:n}=getUIFnAndRouteNameAndParams((i=R.get(i)).currentPathname,w),n={pathname:n||null,route:t,params:r,searchParams:o,interaction:m,globalMetadata:g,modal:e},i?.fn?.(n))}}}}})}}}_ModalBuilder_instances=new WeakSet,_ModalBuilder_setCustomId=function(e){if(this.setCustomId)return this.setCustomId(e),this;throw new Error("Use only one of navigateTo or onClick methods.")};const setupFunctions={createUI:createUI,createRegisterSlashCommandsFunction:createRegisterSlashCommandsFunction},routeFunctions={render:render,reply:reply,deferRender:deferRender,navigate:navigate},builders={ButtonBuilder:ButtonBuilder,ModalBuilder:ModalBuilder},discordjsUI={...discordjs__namespace,...setupFunctions,...routeFunctions,...builders};module.exports=discordjsUI;