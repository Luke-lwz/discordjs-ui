"use strict";var uuid=require("uuid"),nodeLocalstorage=require("node-localstorage"),discord_js=require("discord.js");function createButtonCache(n){const o=new Map;return setInterval(()=>{var e,t,r=Date.now();for([e,t]of o)t.ttl<r&&o.delete(e)},1e3),{set:function(e,t,r){t={fn:t,ttl:Date.now()+1e3*n,currentPathname:r},o.set(e,t)},get:function(e){return o.get(e)}}}const ARGS_DIVIDER=">",PREFIX_LENGTH=12,fs=require("fs"),path=require("path");function getRoutesFromCustomRoutes(e=[]){return e.forEach(e=>{removeFirstLastSlash(e.route).split("/")}),[]}function removeFirstLastSlash(e){return e.replace(/^\/|\/$/g,"")}function getRoutesFromDirectory(e){var t=path.dirname(require.main.filename),t=path.join(t,(e||"/ui").replace("/",""));if(!fs.existsSync(t))throw new Error("UI directory not found at "+t);if(fs.readdirSync(t).length)return console.log(getFileTree(t)),getFileTree(t);throw new Error("No files found in UI directory at "+t)}const ALLOWED_FILE_EXTENSIONS=[".js",".ts"],ALLOWED_FILE_NAMES=["ui"],EXCLUEDED_DIRECTORIES_REGEX=[/^_.*$/,/^\(.*$/],getFileTree=(s,e=0)=>{const u=[];return fs.readdirSync(s).forEach(t=>{var e=path.join(s,t),r=path.join("",t),n=fs.statSync(e),o={path:e,route:r,isDirectory:n.isDirectory(),children:[],component:void 0};if(n.isDirectory())EXCLUEDED_DIRECTORIES_REGEX.some(e=>e.test(t))||(o.children=getFileTree(e,r),u.push(o));else{var n=path.extname(t),a=path.basename(t,n);if(ALLOWED_FILE_EXTENSIONS.includes(n)&&ALLOWED_FILE_NAMES.includes(a))try{var i=require(e);o.component=i.default||i||void 0,o.route=r.replace(n,""),o.component&&"function"==typeof o.component&&u.push(o)}catch(e){}}}),u},maxLength=100,uuidLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/uuid"),routeLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/route");function encodeRoute(e,t){let r=""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}r`+ARGS_DIVIDER+e;var n;return r.length>maxLength&&(n=routeLocalStorage.getItem(r),r=n?""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+n:(n=uuid.v4(),routeLocalStorage.setItem(r,n),uuidLocalStorage.setItem(n,e),""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+n)),r}function getRouteFromUUID(e){return uuidLocalStorage.getItem(e)}const ERROR_SUFFIX=" (UIButtonBuilder)";function getBuilders(l,d,m){return{UIButtonBuilder:class{constructor(){this.button={type:2,style:1,label:"",disabled:!1,emoji:null,url:null,custom_id:null,onClick:null,navigateTo:null},this.onClickKey=null}setLabel(e){return this.button.label=e,this}setStyle(e){return this.button.style=e,this}setEmoji(e){return this.button.emoji=e,this}setUrl(e){return this.button.url=e,this}setDisabled(e){return this.button.disabled=e,this}onClick(e,t){if(!t)throw new Error("onClick requires 'key' as second argument, for memory management purposes. Two functions with the same key replace each other in memory"+ERROR_SUFFIX);var r=l.length+(ARGS_DIVIDER+"f"+ARGS_DIVIDER).length;if(100<r+t.length)throw new Error(`Key is too long (max: ${100-r})`+ERROR_SUFFIX);return this.button.onClick=e,this.onClickKey=t,this}navigateTo(e){return this.button.navigateTo=e,this}setCustomId(e){return this.button.custom_id=e,this}build(){var{custom_id:e,label:t,style:r,emoji:n,disabled:o,navigateTo:a,onClick:i,url:s}=this.button||{};if(!t)throw new Error("Label is required"+ERROR_SUFFIX);if(!r)throw new Error("Style is required"+ERROR_SUFFIX);var u=new discord_js.ButtonBuilder;n&&u.setEmoji(n),r&&u.setStyle(r),t&&u.setLabel(t),s&&u.setURL(s),o&&u.setDisabled(o);let c=e;return i?(n=this.onClickKey,d.set(n,i,m)):a&&(c=encodeRoute(a,l)),u.setCustomId(c),u}}}}function createUIRender(r){return async function(e,t=0){try{r?.deffered||r?.replied?await r?.editReply?.(e):await r?.update?.(e)}catch(e){console.error(e)}}}function createNavigation(s,u,c,e,l="ui",d){return{navigate:function e(t,r={}){var n,o,a,i=getBuilders(l,d,t).UIButtonBuilder;r.blank||({uiFn:r,routeName:n,params:o}=getUIFnAndRouteNameAndParams(t,s),a=createUIRender(u),r&&r?.component?.({interaction:u,navigate:e,pathname:t,route:n,params:o,globalMetadata:c,UIButtonBuilder:i,render:a}))}}}function getUIFnAndRouteNameAndParams(e,t){const a={};let i="/";var s=t,t=e.split("/");""===t[0]&&t.shift();let u=!1;t.forEach((r,e)=>{if(!u){let t=!1;for(let e=0;e<s.length;e++){var n,o=s[e];if(o.isDirectory){if(/\[.*\]/g.test(o.route))return n=o.route.replace("[","").replace("]",""),a[n]=r,i+="/:"+r,s=o.children,t=!0;if(o.route===r)return i+="/"+r,s=o.children,t=!0}}t||(u=!0)}});t=s.find(e=>"ui"===e.route);return u||!t?(console.log("Route not found ("+e+")"),{}):"function"!=typeof t.component?(console.error("Component is not a function ("+e+")"),{}):{uiFn:t,routeName:i,params:a}}function createRegisterSlashCommandsFunction(e){const{clientId:n,token:o,guildId:a}=e;return async e=>{var t=(new discord_js.REST).setToken(o);try{console.log("Started refreshing application (/) commands.");var r=e?.map(e=>e?.command?.toJSON())?.filter(e=>e)||[];await t.put(a?discord_js.Routes.applicationGuildCommands(n,a):discord_js.Routes.applicationCommands(n),{body:r}),console.log("Successfully reloaded application (/) commands.")}catch(e){console.error(e)}}}function createUI(e){const{prefix:h="ui",routeDirectory:t="/ui",customRoutes:r=null,useFunctionalButtons:I=!1,functionalButtonTtl:n=1800,globalMetadata:R,messageDefault:g={},slashCommands:f=[],slashCommandRegisterFunction:o=null}=e||{};if(0<f.length&&!o)throw new Error("slashCommandRegisterFunction is required when slashCommands are provided");if(h.length>PREFIX_LENGTH)throw new Error("Prefix length cannot be more than 12 characters");if(h.includes(ARGS_DIVIDER))throw new Error(`Prefix cannot contain '${ARGS_DIVIDER}' character`);o&&0<f?.length&&o(f);const E=r?getRoutesFromCustomRoutes(r):getRoutesFromDirectory(t),p=createButtonCache(n);async function D(e,t){var r=createNavigation(E,e,R)["navigate"],n=getBuilders(h,p,t)["UIButtonBuilder"],o=createUIRender(e),{uiFn:a,routeName:i,params:s}=getUIFnAndRouteNameAndParams(t,E),e={interaction:e,navigate:r,pathname:t,params:s,route:i,UIButtonBuilder:n,globalMetadata:R,render:o};if(a)try{a?.component?.(e)}catch(e){}}return{openUI:D,onInteraction:function(e){if(e?.isChatInputCommand()){const m=e["commandName"];var t=f.find(e=>e?.command?.name===m);t&&(t=(t||{})["navigateTo"],t)&&D(e,t)}else if(e?.isButton()){var{customId:t=""}=e||{};if(t?.startsWith(h+ARGS_DIVIDER)){var[t,r,...n]=t.split(ARGS_DIVIDER);if(t===h){var o,a,i=getBuilders(h,p,"")["UIButtonBuilder"],s=createUIRender(e),u=createNavigation(E,e,R,g,h,p)["navigate"];switch(r){case"n":var[c,l]=n;switch(c){case"c":var d=getRouteFromUUID(l);if(!d)return;u(d);break;case"r":u(l)}break;case"f":I&&([c]=n,{routeName:a,params:o}=getUIFnAndRouteNameAndParams((c=p.get(c)).currentPathname,E),a={pathname:c.currentPathname||null,route:a,params:o,interaction:e,navigate:u,UIButtonBuilder:i,globalMetadata:R,render:s},c?.fn?.(a))}}}}}}}exports.createRegisterSlashCommandsFunction=createRegisterSlashCommandsFunction,exports.createUI=createUI;