"use strict";var uuid=require("uuid"),nodeLocalstorage=require("node-localstorage"),discord_js=require("discord.js");function createButtonCache(r){const n=new Map;return setInterval(()=>{var e,t,o=Date.now();for([e,t]of n)t.ttl<o&&n.delete(e)},1e3),{set:function(e,t,o){t={fn:t,ttl:Date.now()+1e3*r,currentRoute:o},n.set(e,t)},get:function(e){return n.get(e)}}}const ARGS_DIVIDER=">",PREFIX_LENGTH=12,fs=require("fs"),path=require("path");function getRoutesFromCustomRoutes(e=[]){return e.forEach(e=>{removeFirstLastSlash(e.route).split("/")}),[]}function removeFirstLastSlash(e){return e.replace(/^\/|\/$/g,"")}function getRoutesFromDirectory(e){var t=path.dirname(require.main.filename),t=path.join(t,(e||"/ui").replace("/",""));if(!fs.existsSync(t))throw new Error("UI directory not found at "+t);if(fs.readdirSync(t).length)return console.log(getFileTree(t)),getFileTree(t);throw new Error("No files found in UI directory at "+t)}const ALLOWED_FILE_EXTENSIONS=[".js",".ts"],ALLOWED_FILE_NAMES=["ui"],EXCLUEDED_DIRECTORIES_REGEX=[/^_.*$/,/^\(.*$/],getFileTree=(s,e=0)=>{const u=[];return fs.readdirSync(s).forEach(t=>{var e=path.join(s,t),o=path.join("",t),r=fs.statSync(e),n={path:e,route:o,isDirectory:r.isDirectory(),children:[],component:void 0};if(r.isDirectory())EXCLUEDED_DIRECTORIES_REGEX.some(e=>e.test(t))||(n.children=getFileTree(e,o),u.push(n));else{var r=path.extname(t),i=path.basename(t,r);if(ALLOWED_FILE_EXTENSIONS.includes(r)&&ALLOWED_FILE_NAMES.includes(i))try{var a=require(e);n.component=a.default||a||void 0,n.route=o.replace(r,""),n.component&&"function"==typeof n.component&&u.push(n)}catch(e){}}}),u},maxLength=100,uuidLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/uuid"),routeLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/route");function encodeRoute(e,t){let o=""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}r`+ARGS_DIVIDER+e;var r;return o.length>maxLength&&(r=routeLocalStorage.getItem(o),o=r?""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+r:(r=uuid.v4(),routeLocalStorage.setItem(o,r),uuidLocalStorage.setItem(r,e),""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+r)),o}function getRouteFromUUID(e){return uuidLocalStorage.getItem(e)}const ERROR_SUFFIX=" (UIButtonBuilder)";function getBuilders(c,d,h){return{UIButtonBuilder:class{constructor(){this.button={type:2,style:1,label:"",disabled:!1,emoji:null,url:null,custom_id:null,onClick:null,navigateTo:null},this.onClickKey=null}setLabel(e){return this.button.label=e,this}setStyle(e){return this.button.style=e,this}setEmoji(e){return this.button.emoji=e,this}setUrl(e){return this.button.url=e,this}setDisabled(e){return this.button.disabled=e,this}onClick(e,t){if(!t)throw new Error("onClick requires 'key' as second argument, for memory management purposes. Two functions with the same key replace each other in memory"+ERROR_SUFFIX);var o=c.length+(ARGS_DIVIDER+"f"+ARGS_DIVIDER).length;if(100<o+t.length)throw new Error(`Key is too long (max: ${100-o})`+ERROR_SUFFIX);return this.button.onClick=e,this.onClickKey=t,this}navigateTo(e){return this.button.navigateTo=e,this}setCustomId(e){return this.button.custom_id=e,this}build(){var{custom_id:e,label:t,style:o,emoji:r,disabled:n,navigateTo:i,onClick:a,url:s}=this.button||{};if(!t)throw new Error("Label is required"+ERROR_SUFFIX);if(!o)throw new Error("Style is required"+ERROR_SUFFIX);var u=new discord_js.ButtonBuilder;r&&u.setEmoji(r),o&&u.setStyle(o),t&&u.setLabel(t),s&&u.setURL(s),n&&u.setDisabled(n);let l=e;return a?(r=this.onClickKey,d.set(r,a,h)):i&&(l=encodeRoute(i,c)),u.setCustomId(l),u}}}}function createNavigation(a,s,u,e,l="ui",c){return{navigate:function e(t,o={}){var r,n,i=getBuilders(l,c,t).UIButtonBuilder;o.blank||({uiFn:o,routeName:r,params:n}=getUIFnAndRouteNameAndParams(t,a),o&&o?.component?.({interaction:s,navigate:e,pathname:t,route:r,params:n,globalMetadata:u,UIButtonBuilder:i}))}}}function getUIFnAndRouteNameAndParams(e,t){const i={};let a="/";var s=t,t=e.split("/");""===t[0]&&t.shift();let u=!1;t.forEach((o,e)=>{if(!u){let t=!1;for(let e=0;e<s.length;e++){var r,n=s[e];if(n.isDirectory){if(/\[.*\]/g.test(n.route))return r=n.route.replace("[","").replace("]",""),i[r]=o,a+="/:"+o,s=n.children,t=!0;if(n.route===o)return a+="/"+o,s=n.children,t=!0}}t||(u=!0)}});t=s.find(e=>"ui"===e.route);return console.log(t),u||!t?(console.log("Route not found ("+e+")"),{}):"function"!=typeof t.component?(console.error("Component is not a function ("+e+")"),{}):{uiFn:t,routeName:a,params:i}}class SlashCommandsRegisterFunction{constructor(e){this._clientId=e.clientId,this._token=e.token,this._guildId=e.guildId}async registerSlashCommands(e){var t=new discord_js.REST({version:"9"}).setToken(this._token);try{console.log("Started refreshing application (/) commands."),await t.put(this._guildId?discord_js.Routes.applicationGuildCommands(this._clientId,this._guildId):discord_js.Routes.applicationCommands(this._clientId),{body:e}),console.log("Successfully reloaded application (/) commands.")}catch(e){console.error(e)}}}function createUI(e){const{prefix:c="ui",routeDirectory:t="/ui",customRoutes:o=null,useFunctionalButtons:d=!1,functionalButtonTtl:r=1800,globalMetadata:h,messageDefault:m={},slashCommands:n=[],slashCommandRegisterFunction:i=null}=e||{};if(0<n.length&&!i)throw new Error("slashCommandRegisterFunction is required when slashCommands are provided");if(c.length>PREFIX_LENGTH)throw new Error("Prefix length cannot be more than 12 characters");if(c.includes(ARGS_DIVIDER))throw new Error(`Prefix cannot contain '${ARGS_DIVIDER}' character`);i&&0<n?.length&&i(n);const g=o?getRoutesFromCustomRoutes(o):getRoutesFromDirectory(t),I=createButtonCache(r);return{openUI:function(e,t){var o=createNavigation(g,e,h)["navigate"],r=getBuilders(c,I,t)["UIButtonBuilder"],{uiFn:n,routeName:i,params:a}=getUIFnAndRouteNameAndParams(t,g),o={interaction:e,navigate:o,pathname:t,params:a,route:i,UIButtonBuilder:r,globalMetadata:h};e?.deferReply&&"function"==typeof e.deferReply&&e?.deferReply?.(),n&&n?.component?.(o)},onInteraction:function(e){if(console.log(e),e?.isButton()||e?.isStringSelectMenu()){var{customId:t=""}=e||{};if(t?.startsWith(c+ARGS_DIVIDER)){var[t,o,...r]=t.split(ARGS_DIVIDER);if(t===c){const l="";var t=getBuilders(c,I,l)["UIButtonBuilder"],n=createNavigation(g,e,h,m,c,I)["navigate"],i={interaction:e,navigate:n,pathname:"",route:"",UIButtonBuilder:t,globalMetadata:h};switch(o){case"n":var[a,s]=r;switch(a){case"c":var u=getRouteFromUUID(s);if(!u)return;n(u);break;case"r":const l=s;n(l)}break;case"f":d&&([a]=r,I.get(a)?.fn?.(i))}}}}}}}exports.SlashCommandsRegisterFunction=SlashCommandsRegisterFunction,exports.createUI=createUI;