"use strict";var uuid=require("uuid"),nodeLocalstorage=require("node-localstorage"),discord_js=require("discord.js");function createButtonCache(r){const n=new Map;return setInterval(()=>{var t,e,o=Date.now();for([t,e]of n)e.ttl<o&&n.delete(t)},1e3),{set:function(t,e,o){e={fn:e,ttl:Date.now()+1e3*r,currentRoute:o},n.set(t,e)},get:function(t){return n.get(t)}}}const ARGS_DIVIDER=">",PREFIX_LENGTH=12,fs=require("fs"),path=require("path");function getRoutesFromCustomRoutes(t=[]){return t.forEach(t=>{removeFirstLastSlash(t.route).split("/")}),[]}function removeFirstLastSlash(t){return t.replace(/^\/|\/$/g,"")}function getRoutesFromDirectory(t){var e=path.dirname(require.main.filename),e=path.join(e,(t||"/ui").replace("/",""));if(!fs.existsSync(e))throw new Error("UI directory not found at "+e);if(fs.readdirSync(e).length)return console.log(getFileTree(e)),getFileTree(e);throw new Error("No files found in UI directory at "+e)}const ALLOWED_FILE_EXTENSIONS=[".js",".ts"],ALLOWED_FILE_NAMES=["ui"],EXCLUEDED_DIRECTORIES_REGEX=[/^_.*$/,/^\(.*$/],getFileTree=(a,t=0)=>{const s=[];return fs.readdirSync(a).forEach(e=>{var t=path.join(a,e),o=path.join("",e),r=fs.statSync(t),n={path:t,route:o,isDirectory:r.isDirectory(),children:[],component:void 0};if(r.isDirectory())EXCLUEDED_DIRECTORIES_REGEX.some(t=>t.test(e))||(n.children=getFileTree(t,o),s.push(n));else{var r=path.extname(e),i=path.basename(e,r);if(ALLOWED_FILE_EXTENSIONS.includes(r)&&ALLOWED_FILE_NAMES.includes(i))try{var u=require(t);n.component=u.default||u||void 0,n.route=o.replace(r,""),n.component&&"function"==typeof n.component&&s.push(n)}catch(t){}}}),s},maxLength=100,uuidLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/uuid"),routeLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/route");function encodeRoute(t,e){let o=""+e+ARGS_DIVIDER+`n${ARGS_DIVIDER}r`+ARGS_DIVIDER+t;var r;return o.length>maxLength&&(r=routeLocalStorage.getItem(o),o=r?""+e+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+r:(r=uuid.v4(),routeLocalStorage.setItem(o,r),uuidLocalStorage.setItem(r,t),""+e+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+r)),o}function getRouteFromUUID(t){return uuidLocalStorage.getItem(t)}const ERROR_SUFFIX=" (UIButtonBuilder)";function getBuilders(c,d,h){return{UIButtonBuilder:class{constructor(){this.button={type:2,style:1,label:"",disabled:!1,emoji:null,url:null,custom_id:null,onClick:null,navigateTo:null},this.onClickKey=null}setLabel(t){return this.button.label=t,this}setStyle(t){return this.button.style=t,this}setEmoji(t){return this.button.emoji=t,this}setUrl(t){return this.button.url=t,this}setDisabled(t){return this.button.disabled=t,this}onClick(t,e){if(!e)throw new Error("onClick requires 'key' as second argument, for memory management purposes. Two functions with the same key replace each other in memory"+ERROR_SUFFIX);var o=c.length+(ARGS_DIVIDER+"f"+ARGS_DIVIDER).length;if(100<o+e.length)throw new Error(`Key is too long (max: ${100-o})`+ERROR_SUFFIX);return this.button.onClick=t,this.onClickKey=e,this}navigateTo(t){return this.button.navigateTo=t,this}setCustomId(t){return this.button.custom_id=t,this}build(){var{custom_id:t,label:e,style:o,emoji:r,disabled:n,navigateTo:i,onClick:u,url:a}=this.button||{};if(!e)throw new Error("Label is required"+ERROR_SUFFIX);if(!o)throw new Error("Style is required"+ERROR_SUFFIX);var s=new discord_js.ButtonBuilder;r&&s.setEmoji(r),o&&s.setStyle(o),e&&s.setLabel(e),a&&s.setURL(a),n&&s.setDisabled(n);let l=t;return u?(r=this.onClickKey,d.set(r,u,h)):i&&(l=encodeRoute(i,c)),s.setCustomId(l),s}}}}function createNavigation(r,a,s,t,n="ui",i){function l(t,e={}){var o=getBuilders(n,i,t)["UIButtonBuilder"];if(!e.blank){let n="/";var u=r,e=t.split("/");""===e[0]&&e.shift();let i=!1;e.forEach((o,t)=>{if(!i){let e=!1;for(let t=0;t<u.length;t++){var r=u[t];if(r.isDirectory){if(/\[.*\]/g.test(r.route))return r.route.replace("[","").replace("]",""),n+="/:"+o,u=r.children,e=!0;if(r.route===o)return n+="/"+o,u=r.children,e=!0}}e||(i=!0)}});e=u.find(t=>"ui"===t.route);console.log(e),i||!e?console.log("Route not found ("+t+")"):"function"!=typeof e.component?console.error("Component is not a function ("+t+")"):(t={interaction:a,navigate:l,pathname:t,route:n,globalMetadata:s,UIButtonBuilder:o},e?.component?.(t))}}return l("/test/1234"),{navigate:l}}function createUI(t){const{prefix:e="ui",routeDirectory:o="/ui",customRoutes:r=null,useFunctionalButtons:n=!1,functionalButtonTtl:i=1800,globalMetadata:u,messageDefault:a={}}=t||{};if(e.length>PREFIX_LENGTH)throw new Error("Prefix length cannot be more than 12 characters");if(e.includes(ARGS_DIVIDER))throw new Error(`Prefix cannot contain '${ARGS_DIVIDER}' character`);const s=r?getRoutesFromCustomRoutes(r):getRoutesFromDirectory(o);console.log("äääää",s);t={isButton:()=>!0,isStringSelectMenu:()=>!0,customId:"ui>n>r>/profile/123482938747191284"};if(t?.isButton()||t?.isStringSelectMenu()){var{customId:l=""}=t||{};if(l?.startsWith(e+ARGS_DIVIDER)){var[l,c,...d]=l.split(ARGS_DIVIDER);if(l===e){const m="";var h=createButtonCache(i),l=getBuilders(e,h,m)["UIButtonBuilder"],I=(console.log("ööö",s),createNavigation(s,t,u,a,e,h))["navigate"],R={interaction:t,navigate:I,pathname:"",route:"",UIButtonBuilder:l,globalMetadata:u};switch(c){case"n":var[f,g]=d;switch(f){case"c":var E=getRouteFromUUID(g);if(!E)return void!void 0;I(E);break;case"r":const m=g;I(m)}break;case"f":n&&([f]=d,h.get(f)?.fn?.(R))}}}}}module.exports=createUI;