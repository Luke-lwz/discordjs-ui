"use strict";const fs=require("fs"),path=require("path"),ARGS_DIVIDER=">";function createUI(e){var{prefix:e="ui",routeDirectory:r="/ui",customRoutes:t}=e||{};if(12<e.length)throw new Error("Prefix length cannot be more than 12 characters");if(e.includes(ARGS_DIVIDER))throw new Error(`Prefix cannot contain '${ARGS_DIVIDER}' character`);t||getRoutesFromDirectory(r)}function getRoutesFromDirectory(e){var r=path.dirname(require.main.filename),r=path.join(r,(e||"/ui").replace("/",""));if(!fs.existsSync(r))throw new Error("UI directory not found at "+r);if(fs.readdirSync(r).length)return console.log(getFileTree(r)),[];throw new Error("No files found in UI directory at "+r)}const ALLOWED_FILE_EXTENSIONS=[".js",".ts"],ALLOWED_FILE_NAMES=["ui"],EXCLUEDED_DIRECTORIES_REGEX=[/^_.*$/,/^\(.*$/],getFileTree=(a,s="")=>{const E=[];return fs.readdirSync(a).forEach(r=>{var e=path.join(a,r),t=path.join(s,r),o=fs.statSync(e),n={route:t,isDirectory:o.isDirectory(),children:[],component:void 0};if(o.isDirectory())EXCLUEDED_DIRECTORIES_REGEX.some(e=>e.test(r))||(n.children=getFileTree(e,t),E.push(n));else{var o=path.extname(r),i=path.basename(r,o);if(ALLOWED_FILE_EXTENSIONS.includes(o)&&ALLOWED_FILE_NAMES.includes(i))try{var c=require(e);console.log(c),n.component=c.default||c||void 0,n.route=t.replace(o,""),n.component&&"function"==typeof n.component&&E.push(n)}catch(e){}}}),E};module.exports=createUI;