"use strict";require("uuid");var nodeLocalstorage=require("node-localstorage");require("discord.js");const fs=require("fs"),path=require("path");function getRoutesFromCustomRoutes(e=[]){return e.forEach(e=>{removeFirstLastSlash(e.route).split("/")}),[]}function removeFirstLastSlash(e){return e.replace(/^\/|\/$/g,"")}function getRoutesFromDirectory(e){var r=path.dirname(require.main.filename),r=path.join(r,(e||"/ui").replace("/",""));if(!fs.existsSync(r))throw new Error("UI directory not found at "+r);if(fs.readdirSync(r).length)return console.log(getFileTree(r)),[];throw new Error("No files found in UI directory at "+r)}const ALLOWED_FILE_EXTENSIONS=[".js",".ts"],ALLOWED_FILE_NAMES=["ui"],EXCLUEDED_DIRECTORIES_REGEX=[/^_.*$/,/^\(.*$/],getFileTree=(s,c="")=>{const u=[];return fs.readdirSync(s).forEach(r=>{var e=path.join(s,r),o=path.join(c,r),t=fs.statSync(e),i={path:e,route:o,isDirectory:t.isDirectory(),children:[],component:void 0};if(t.isDirectory())EXCLUEDED_DIRECTORIES_REGEX.some(e=>e.test(r))||(i.children=getFileTree(e,o),u.push(i));else{var t=path.extname(r),n=path.basename(r,t);if(ALLOWED_FILE_EXTENSIONS.includes(t)&&ALLOWED_FILE_NAMES.includes(n))try{var a=require(e);console.log(a),i.component=a.default||a||void 0,i.route=o.replace(t,""),i.component&&"function"==typeof i.component&&u.push(i)}catch(e){}}}),u},ARGS_DIVIDER=">";function createUI(e){var{prefix:e="ui",routeDirectory:r="/ui",customRoutes:o}=e||{};if(12<e.length)throw new Error("Prefix length cannot be more than 12 characters");if(e.includes(ARGS_DIVIDER))throw new Error(`Prefix cannot contain '${ARGS_DIVIDER}' character`);o?getRoutesFromCustomRoutes(o):getRoutesFromDirectory(r)}new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/uuid"),new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/route"),require("fs"),require("path"),module.exports=createUI;