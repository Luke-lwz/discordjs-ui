"use strict";var uuid=require("uuid"),nodeLocalstorage=require("node-localstorage"),discord_js=require("discord.js");function createButtonCache(o){const n=new Map;return setInterval(()=>{var e,t,r=Date.now();for([e,t]of n)t.ttl<r&&n.delete(e)},1e3),{set:function(e,t,r){t={fn:t,ttl:Date.now()+1e3*o,currentRoute:r},n.set(e,t)},get:function(e){return n.get(e)}}}const ARGS_DIVIDER=">",PREFIX_LENGTH=12,fs=require("fs"),path=require("path");function getRoutesFromCustomRoutes(e=[]){return e.forEach(e=>{removeFirstLastSlash(e.route).split("/")}),[]}function removeFirstLastSlash(e){return e.replace(/^\/|\/$/g,"")}function getRoutesFromDirectory(e){var t=path.dirname(require.main.filename),t=path.join(t,(e||"/ui").replace("/",""));if(!fs.existsSync(t))throw new Error("UI directory not found at "+t);if(fs.readdirSync(t).length)return console.log(getFileTree(t)),getFileTree(t);throw new Error("No files found in UI directory at "+t)}const ALLOWED_FILE_EXTENSIONS=[".js",".ts"],ALLOWED_FILE_NAMES=["ui"],EXCLUEDED_DIRECTORIES_REGEX=[/^_.*$/,/^\(.*$/],getFileTree=(u,e=0)=>{const s=[];return fs.readdirSync(u).forEach(t=>{var e=path.join(u,t),r=path.join("",t),o=fs.statSync(e),n={path:e,route:r,isDirectory:o.isDirectory(),children:[],component:void 0};if(o.isDirectory())EXCLUEDED_DIRECTORIES_REGEX.some(e=>e.test(t))||(n.children=getFileTree(e,r),s.push(n));else{var o=path.extname(t),i=path.basename(t,o);if(ALLOWED_FILE_EXTENSIONS.includes(o)&&ALLOWED_FILE_NAMES.includes(i))try{var a=require(e);n.component=a.default||a||void 0,n.route=r.replace(o,""),n.component&&"function"==typeof n.component&&s.push(n)}catch(e){}}}),s},maxLength=100,uuidLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/uuid"),routeLocalStorage=new nodeLocalstorage.LocalStorage("./discordjs-ui/localStorage/routes/route");function encodeRoute(e,t){let r=""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}r`+ARGS_DIVIDER+e;var o;return r.length>maxLength&&(o=routeLocalStorage.getItem(r),r=o?""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+o:(o=uuid.v4(),routeLocalStorage.setItem(r,o),uuidLocalStorage.setItem(o,e),""+t+ARGS_DIVIDER+`n${ARGS_DIVIDER}c`+ARGS_DIVIDER+o)),r}function getRouteFromUUID(e){return uuidLocalStorage.getItem(e)}const ERROR_SUFFIX=" (UIButtonBuilder)";function getBuilders(c,d,h){return{UIButtonBuilder:class{constructor(){this.button={type:2,style:1,label:"",disabled:!1,emoji:null,url:null,custom_id:null,onClick:null,navigateTo:null},this.onClickKey=null}setLabel(e){return this.button.label=e,this}setStyle(e){return this.button.style=e,this}setEmoji(e){return this.button.emoji=e,this}setUrl(e){return this.button.url=e,this}setDisabled(e){return this.button.disabled=e,this}onClick(e,t){if(!t)throw new Error("onClick requires 'key' as second argument, for memory management purposes. Two functions with the same key replace each other in memory"+ERROR_SUFFIX);var r=c.length+(ARGS_DIVIDER+"f"+ARGS_DIVIDER).length;if(100<r+t.length)throw new Error(`Key is too long (max: ${100-r})`+ERROR_SUFFIX);return this.button.onClick=e,this.onClickKey=t,this}navigateTo(e){return this.button.navigateTo=e,this}setCustomId(e){return this.button.custom_id=e,this}build(){var{custom_id:e,label:t,style:r,emoji:o,disabled:n,navigateTo:i,onClick:a,url:u}=this.button||{};if(!t)throw new Error("Label is required"+ERROR_SUFFIX);if(!r)throw new Error("Style is required"+ERROR_SUFFIX);var s=new discord_js.ButtonBuilder;o&&s.setEmoji(o),r&&s.setStyle(r),t&&s.setLabel(t),u&&s.setURL(u),n&&s.setDisabled(n);let l=e;return a?(o=this.onClickKey,d.set(o,a,h)):i&&(l=encodeRoute(i,c)),s.setCustomId(l),s}}}}function createNavigation(a,u,s,e,l="ui",c){return{navigate:function e(t,r={}){var o,n,i=getBuilders(l,c,t).UIButtonBuilder;r.blank||({uiFn:r,routeName:o,params:n}=getUIFnAndRouteNameAndParams(t,a),r&&r?.component?.({interaction:u,navigate:e,pathname:t,route:o,params:n,globalMetadata:s,UIButtonBuilder:i}))}}}function getUIFnAndRouteNameAndParams(e,t){const i={};let a="/";var u=t,t=e.split("/");""===t[0]&&t.shift();let s=!1;t.forEach((r,e)=>{if(!s){let t=!1;for(let e=0;e<u.length;e++){var o,n=u[e];if(n.isDirectory){if(/\[.*\]/g.test(n.route))return o=n.route.replace("[","").replace("]",""),i[o]=r,a+="/:"+r,u=n.children,t=!0;if(n.route===r)return a+="/"+r,u=n.children,t=!0}}t||(s=!0)}});t=u.find(e=>"ui"===e.route);return console.log(t),s||!t?(console.log("Route not found ("+e+")"),{}):"function"!=typeof t.component?(console.error("Component is not a function ("+e+")"),{}):{uiFn:t,routeName:a,params:i}}function createUI(e){const{prefix:c="ui",routeDirectory:t="/ui",customRoutes:r=null,useFunctionalButtons:d=!1,functionalButtonTtl:o=1800,globalMetadata:h,messageDefault:I={}}=e||{};if(c.length>PREFIX_LENGTH)throw new Error("Prefix length cannot be more than 12 characters");if(c.includes(ARGS_DIVIDER))throw new Error(`Prefix cannot contain '${ARGS_DIVIDER}' character`);const R=r?getRoutesFromCustomRoutes(r):getRoutesFromDirectory(t),f=createButtonCache(o);return{openUI:function(e,t){var r=createNavigation(R,e,h)["navigate"],o=getBuilders(c,f,t)["UIButtonBuilder"],{uiFn:n,routeName:i,params:a}=getUIFnAndRouteNameAndParams(t,R),r={interaction:e,navigate:r,pathname:t,params:a,route:i,UIButtonBuilder:o,globalMetadata:h};e?.deferReply&&"function"==typeof e.deferReply&&e?.deferReply?.(),n&&n?.component?.(r)},onInteraction:function(e){if(e?.isButton()||e?.isStringSelectMenu()){var{customId:t=""}=e||{};if(t?.startsWith(c+ARGS_DIVIDER)){var[t,r,...o]=t.split(ARGS_DIVIDER);if(t===c){const l="";var t=getBuilders(c,f,l)["UIButtonBuilder"],n=createNavigation(R,e,h,I,c,f)["navigate"],i={interaction:e,navigate:n,pathname:"",route:"",UIButtonBuilder:t,globalMetadata:h};switch(r){case"n":var[a,u]=o;switch(a){case"c":var s=getRouteFromUUID(u);if(!s)return;n(s);break;case"r":const l=u;n(l)}break;case"f":d&&([a]=o,f.get(a)?.fn?.(i))}}}}}}}module.exports=createUI;